{"version":3,"sources":["firebase/config.js","hooks/useStorage.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","comps/ProgressBar.js","comps/UserForm.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","projectstorage","storage","projectfirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","getFile","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","useFirestore","docs","setDocs","orderBy","onSnapshot","snapshot","documents","forEach","doc","push","data","id","ImageGrid","setselectedImage","console","log","className","map","motion","div","key","onClick","whileHover","scale","whileTap","src","alt","Modal","selectedImage","setSelectedImage","e","target","Title","ProgressBar","setFile","style","width","UserForm","SetError","types","type","onChange","selected","files","includes","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7d0a16d.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/compat/app';\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/firestore\";\nimport { initializeApp } from \"firebase/app\";\n\n\n\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCZ9eqz-3R_DVzW9pWYkr7AZjDQjgtN5Oo\",\n  authDomain: \"piecegram.firebaseapp.com\",\n  projectId: \"piecegram\",\n  storageBucket: \"piecegram.appspot.com\",\n  messagingSenderId: \"343310223620\",\n  appId: \"1:343310223620:web:785ca6862194790812a851\",\n  measurementId: \"G-H4D6NHBPXG\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst app = initializeApp(firebaseConfig);\nconst projectstorage = firebase.storage();\nconst projectfirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n\nexport{projectfirestore, projectstorage, timestamp, app,};","import { useState, useEffect } from \"react\";\nimport { projectstorage, projectfirestore, timestamp } from \"../firebase/config\";\n\n\nconst useStorage = (file)=>{\n\n    const [progress, setProgress ] = useState(null)\n    const [error, setError] = useState(null)\n    const [url, setUrl] = useState(null)\n\n\n\n    useEffect(()=>{\n        const getFile = projectstorage.ref(file.name);\n        const collectionRef = projectfirestore.collection('images');\n        getFile.put(file).on(\"status_changed\", (snap)=>{\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err)=>{\n            setError(err);\n        }, async()=>{\n            const url = await getFile.getDownloadURL();\n            setUrl(url);\n            const createdAt = timestamp();\n            collectionRef.add({url, createdAt})\n\n        })\n\n\n    }, [file]);\n\n    return {progress, url, error}\n\n\n}\n\nexport default useStorage;\n\n\n","/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from \"react\";\nimport { projectstorage, projectfirestore, timestamp } from \"../firebase/config\";\nimport { useStorage } from \"../hooks/useStorage\";\n\n// eslint-disable-next-line no-unused-vars\nconst useFirestore = (collection) => {\n    const[docs, setDocs] = useState([]);\n    useEffect(()=>{\n        const collectionRef = projectfirestore.collection(collection);\n        collectionRef.orderBy('createdAt', 'desc').onSnapshot(snapshot=>{\n           let documents =[];\n              snapshot.docs.forEach(doc=>{\n                  documents.push({...doc.data(), id: doc.id});\n              });\n              setDocs(documents);\n        });\n\n        return ()=>{\n            collectionRef.onSnapshot(null);\n        }\n        \n    }, [collection]);\n    return {docs};\n    \n}\n\nexport default useFirestore;","import React from 'react'\nimport useFirestore from '../hooks/useFirestore'\nimport { motion } from 'framer-motion';\n\nexport default function ImageGrid({setselectedImage}) {\n  const {docs} = useFirestore('images');\n  console.log(docs)\n  return (\n    <div className='img-grid'>\n        {docs && docs.map(doc => (\n          <motion.div className='img-wrap' key={doc.id}\n            onClick={()=>setselectedImage(doc.url)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            \n          >\n            <img src={doc.url} alt={doc.name} />\n          </motion.div>\n        ))}\n        </div>\n  )\n}\n","import React from 'react'\n\nexport const Modal = ({selectedImage, setSelectedImage }) => {\n\n  const onSelected = (e) => {\n    if(e.target.className === 'Modal'){\n      setSelectedImage(null);\n    }\n\n   \n   \n  }\n  return (\n    <div className='Modal' onClick={onSelected}>\n      \n        <img src={selectedImage} alt='enlarged pic'/>\n    </div>\n  )\n}\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Kenafrica Pieces</h1>\n      <h2>Welcome to Kenafrica's Poetry and Pieces</h2>\n      <strong><p>Do you love art and peotic pieces.?</p></strong>\n    </div>\n  )\n}\n\nexport default Title;","\n\n\n//component to track the progress of a file upload, and display the progress in a progress bar. The component should accept a file object as a prop.\nimport React, { useEffect } from 'react'\nimport useStorage from '../hooks/useStorage';\n\nexport default function ProgressBar({file, setFile}) {\n    const {url, progress} = useStorage(file);\n    console.log(url, progress);\n\n\n    useEffect(()=>{\n      if(url){\n        setFile(null);\n      }\n\n    },[url, setFile])\n\n  return (\n    <div className='progress-bar' style={ {width: progress+ '%' }}></div>\n  )\n}\n\n","import React, { useState } from \"react\"\nimport ProgressBar from \"./ProgressBar\";\nfunction UserForm(){\n\n    const[file, setFile] = useState(null);\n    const [error, SetError] = useState(null);\n    const types = ['image/png', 'image/jpeg'];\n\n    function changeHandler(e){\n        var selected = e.target.files[0];\n        console.log(selected);\n\n        if (selected && types.includes(selected.type)){\n            SetError(\"\");\n            setFile(selected);\n            \n            \n            \n        }else{\n            setFile(null);\n            SetError(\"Please select an image file\");\n        }\n    \n    }\n\n    \n    return(\n        <div className=\"container\">\n            <hr></hr>\n            <form>\n                <input type=\"file\" onChange={changeHandler} />\n                    <div className=\"output\">\n                        {error && <div className=\"error\">{error}</div>}\n                        {file && <div className=\"filename\">{file.name}</div>}\n                        {file &&  <ProgressBar file={file} setFile={setFile} />}\n                    </div>\n            </form>\n        </div>\n    )\n    \n}\n\nexport default UserForm;\n","import React from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport { Modal } from './comps/Modal';\nimport Title from './comps/Title';\nimport UserForm from './comps/UserForm';\n\nfunction App() {\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UserForm/>\n      <ImageGrid setselectedImage={setSelectedImage}/>\n      {selectedImage&& <Modal selectedImage={selectedImage} setSelectedImage = {setSelectedImage} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}